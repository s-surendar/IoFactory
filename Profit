// C# program to find maximum achievable
// value with a knapsack of weight W and
// multiple instances allowed.
using System;
public class item {
    public int weight;
    public int value;
    public item(int weight, int value) {
        this.weight = weight;
        this.value = value;
    }
}
class MaxProfit {
	

	// Driver program
	public static void Main()
	{
	    item[] items = {
            new item(4, 1000),
            new item(5, 1500),
            new item(10, 3000),
        };
        Console.WriteLine("Enter your timeUnit:");
        int timeUnit = Convert.ToInt32(Console.ReadLine());
        
        int[] capacityList = new int[timeUnit + 1];

        for (int cap = 0; cap <= timeUnit; cap++) {
            foreach (var i in items) {
                if (i.weight <= cap) {
                    capacityList[cap] = Math.Max(capacityList[cap], i.value + capacityList[cap - i.weight]);
                }
            }
        }
        Console.Write("Earnings: $"+capacityList[timeUnit]);
	}
}

// This code is contributed by vt_m.
